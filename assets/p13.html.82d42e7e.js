import{s as M}from"./index.082e90b7.js";import{d as t,a as c}from"./matrix.a41e1099.js";import{_ as f,e as y,f as C,g as V,o as _,c as v,b as I,F as X,h as g}from"./app.dd4a8a2f.js";const L=y({setup(w){C(()=>{const s=M(b.value).attr("viewBox",[0,0,400,200]);var p={id:"inputMatrix",data:[["M","C","M","X","C","I","V"]],x:60,y:96,cellHeight:24,cellWidth:24,cellFontSize:"8px"},r={id:"inputMatrixVLine",name:"i",index:0,upper:!0},o={id:"symbolMatrix",data:[[1e3,900,500,400,100,90,50,40,10,9,5,4,1],["M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"]],x:60,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},l={id:"symbolMatrixVLine",name:"i",index:0,upper:!0},i={id:"outputMatrix",data:[["","","",""]],x:60,y:144,cellHeight:24,cellWidth:24,cellFontSize:"8px"};t(s,p),c(s,p,r),t(s,o),c(s,o,l),t(s,i);var n=0,h=0,x=[1e3,900,500,400,100,90,50,40,10,9,5,4,1],e=["M","C","M","X","C","I","V"],k=["","","",""],d=0,a=0,u=!1;setInterval(()=>{if(u=!1,n>=e.length){n=0,h=0,e=["M","C","M","X","C","I","V"],k=["","","",""],d=0,a=0,l.index=d,r.index=n,i.data=[k],u||(t(s,p),c(s,p,r),t(s,o),c(s,o,l),t(s,i),u=!0);return}switch(e[n]){case"I":if(e[n+1])switch(e[n+1]){case"V":a=4,n+=1;break;case"X":a=9,n+=1;break;default:a=1;break}else a=1;break;case"V":a=5;break;case"X":if(e[n+1])switch(e[n+1]){case"L":a=40,n+=1;break;case"C":a=90,n+=1;break;default:a=10;break}else a=10;break;case"L":a=5;break;case"C":if(e[n+1])switch(e[n+1]){case"D":a=400,n+=1;break;case"M":a=900,n+=1;break;default:a=100;break}else a=100;break;case"D":a=500;break;case"M":a=1e3;break}for(let m=0;m<x.length;m++)x[m]==a&&(d=m);l.index=d,h+=a,r.index=n,k=("   "+h).slice(-4).split(""),i.data=[k],u||(t(s,p),c(s,p,r),t(s,o),c(s,o,l),t(s,i),u=!0),n+=1},2e3)});const b=V();return(s,p)=>(_(),v("svg",{ref_key:"d3svg",ref:b},null,512))}});var D=f(L,[["__file","P13.vue"]]);const S=g(`<h1 id="_13-roman-to-integer" tabindex="-1"><a class="header-anchor" href="#_13-roman-to-integer" aria-hidden="true">#</a> 13. Roman to Integer</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: s = &quot;MCMXCIV&quot;
Output: 1994
Explanation: M = 1000, CM = 900, XC = 90 and IV = 4.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,3),F=g(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">max_area</span><span class="token punctuation">(</span>height<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> l <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> r <span class="token operator">=</span> height<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> max_area <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>

        <span class="token keyword">while</span> l <span class="token operator">&lt;</span> r <span class="token punctuation">{</span>
            <span class="token keyword">let</span> width <span class="token operator">=</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> height<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">&lt;</span> height<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token punctuation">{</span>
                max_area <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token function">max</span><span class="token punctuation">(</span>max_area<span class="token punctuation">,</span> height<span class="token punctuation">[</span>l<span class="token punctuation">]</span> <span class="token operator">*</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span>
                l <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                max_area <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>cmp<span class="token punctuation">::</span></span><span class="token function">max</span><span class="token punctuation">(</span>max_area<span class="token punctuation">,</span> height<span class="token punctuation">[</span>r<span class="token punctuation">]</span> <span class="token operator">*</span> width<span class="token punctuation">)</span><span class="token punctuation">;</span>
                r <span class="token operator">-=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        max_area
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div>`,2),z={setup(w){return(b,s)=>(_(),v(X,null,[S,I(D),F],64))}};var W=f(z,[["__file","p13.html.vue"]]);export{W as default};
