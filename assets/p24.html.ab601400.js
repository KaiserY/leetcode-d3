var m=Object.defineProperty;var w=(k,l,c)=>l in k?m(k,l,{enumerable:!0,configurable:!0,writable:!0,value:c}):k[l]=c;var v=(k,l,c)=>(w(k,typeof l!="symbol"?l+"":l,c),c);import{s as S}from"./index.082e90b7.js";import{d as h}from"./linkedlist.3ad3eb3d.js";import{_ as x,e as y,f as O,g as J,o as b,c as g,b as _,F as L,h as N}from"./app.dd4a8a2f.js";const B=y({setup(k){O(()=>{const i=S(f.value).attr("viewBox",[0,0,400,200]);var s={id:"inputLinkedList",data:[1,2,3,4],x:24,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},e={id:"firstLinkedList",data:[],x:24,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},u={id:"secondLinkedList",data:[],x:24,y:120,cellHeight:24,cellWidth:24,cellFontSize:"8px"},d={id:"restLinkedList",data:[],x:24,y:168,cellHeight:24,cellWidth:24,cellFontSize:"8px"},n=0,a=[{first:[],second:[],rest:[]}];c(new l(1,new l(2,new l(3,new l(4,null)))),a),setInterval(()=>{e.data=a[n].first,u.data=a[n].second,d.data=a[n].rest,h(i,s),h(i,e),h(i,u),h(i,d),n+=1,n>=a.length&&(n=0)},2e3)});class l{constructor(s,e){v(this,"val");v(this,"next");this.val=s===void 0?0:s,this.next=e===void 0?null:e}}function c(i,s){if(i!=null){var e=i;if(e.next!=null){for(var u=e.next,d=u.next,n=JSON.parse(JSON.stringify(e)),a=[];n!=null;)a.push(n.val),n=n.next;for(var t=JSON.parse(JSON.stringify(u)),o=[];t!=null;)o.push(t.val),t=t.next;for(var p=JSON.parse(JSON.stringify(d)),r=[];p!=null;)r.push(p.val),p=p.next;s.push({first:a,second:o,rest:r}),e.next=c(d,s);for(var n=JSON.parse(JSON.stringify(e)),a=[];n!=null;)a.push(n.val),n=n.next;for(var t=JSON.parse(JSON.stringify(u)),o=[];t!=null;)o.push(t.val),t=t.next;for(var p=JSON.parse(JSON.stringify(d)),r=[];p!=null;)r.push(p.val),p=p.next;s.push({first:a,second:o,rest:r}),u.next=e;for(var n=JSON.parse(JSON.stringify(e)),a=[];n!=null;)a.push(n.val),n=n.next;for(var t=JSON.parse(JSON.stringify(u)),o=[];t!=null;)o.push(t.val),t=t.next;for(var p=JSON.parse(JSON.stringify(d)),r=[];p!=null;)r.push(p.val),p=p.next;return s.push({first:a,second:o,rest:r}),u}else{for(var n=JSON.parse(JSON.stringify(e)),a=[];n!=null;)a.push(n.val),n=n.next;var o=JSON.parse(JSON.stringify(s[s.length-1].second)),r=JSON.parse(JSON.stringify(s[s.length-1].rest));return s.push({first:a,second:o,rest:r}),e}}else{var a=JSON.parse(JSON.stringify(s[s.length-1].first)),o=JSON.parse(JSON.stringify(s[s.length-1].second)),r=JSON.parse(JSON.stringify(s[s.length-1].rest));return s.push({first:a,second:o,rest:r}),null}}const f=J();return(i,s)=>(b(),g("svg",{ref_key:"d3svg",ref:f},null,512))}});var z=x(B,[["__file","P24.vue"]]);const H=N(`<h1 id="_24-swap-nodes-in-pairs" tabindex="-1"><a class="header-anchor" href="#_24-swap-nodes-in-pairs" aria-hidden="true">#</a> 24. Swap Nodes in Pairs</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: head = [1,2,3,4]
Output: [2,1,4,3]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3),P=N(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">swap_pairs</span><span class="token punctuation">(</span>head<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">ListNode</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">ListNode</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">mut</span> first<span class="token punctuation">)</span> <span class="token operator">=</span> head <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">mut</span> second<span class="token punctuation">)</span> <span class="token operator">=</span> first<span class="token punctuation">.</span>next<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> rest <span class="token operator">=</span> second<span class="token punctuation">.</span>next<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                first<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token keyword">Self</span><span class="token punctuation">::</span><span class="token function">swap_pairs</span><span class="token punctuation">(</span>rest<span class="token punctuation">)</span><span class="token punctuation">;</span>
                second<span class="token punctuation">.</span>next <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">Some</span><span class="token punctuation">(</span>second<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token class-name">Some</span><span class="token punctuation">(</span>first<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">None</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,2),W={setup(k){return(l,c)=>(b(),g(L,null,[H,_(z),P],64))}};var j=x(W,[["__file","p24.html.vue"]]);export{j as default};
