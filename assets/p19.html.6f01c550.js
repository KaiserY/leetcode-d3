var w=Object.defineProperty;var g=(c,n,e)=>n in c?w(c,n,{enumerable:!0,configurable:!0,writable:!0,value:e}):c[n]=e;var k=(c,n,e)=>(g(c,typeof n!="symbol"?n+"":n,e),e);import{s as y}from"./index.082e90b7.js";import{d as h,a as L}from"./linkedlist.3ad3eb3d.js";import{_ as b,e as N,f as S,g as B,o as v,c as f,b as F,F as V,h as x}from"./app.dd4a8a2f.js";const E=N({setup(c){S(()=>{const s=y(d.value).attr("viewBox",[0,0,400,200]);var p={id:"inputLinkedList",data:[1,2,3,4,5],x:60,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},l={id:"inputLinkedListVLine",name:"i",index:0,upper:!0},o={id:"outpuLinkedList",data:[],x:60,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},t=0,a=[{output:[],i:0}];e(new n(1,new n(2,new n(3,new n(4,new n(5,null))))),2,a),setInterval(()=>{o.data=a[t].output,l.index=a[t].i,h(s,p),L(s,p,l),h(s,o),t+=1,t>=a.length&&(t=0)},2e3)});class n{constructor(p,l){k(this,"val");k(this,"next");this.val=p===void 0?0:p,this.next=l===void 0?null:l}}function e(s,p,l){for(var o=[],t=[];s!=null;){var a=s,_=s.next;s=_,o.push(a)}o.reverse();var r=null;for(let u=0;u<o.length;u++)if(u!=p-1){var a=o[u];a.next=r,r=a,t.push(a.val);var m=[];for(let i=0;i<t.length;i++)m.push(t[i]);l.push({output:m.reverse(),i:o.length-u-1})}return r}const d=B();return(s,p)=>(v(),f("svg",{ref_key:"d3svg",ref:d},null,512))}});var z=b(E,[["__file","P19.vue"]]);const I=x(`<h1 id="_19-remove-nth-node-from-end-of-list" tabindex="-1"><a class="header-anchor" href="#_19-remove-nth-node-from-end-of-list" aria-hidden="true">#</a> 19. Remove Nth Node From End of List</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: head = [1,2,3,4,5], n = 2
Output: [1,2,3,5]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3),O=x(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">remove_nth_from_end</span><span class="token punctuation">(</span><span class="token keyword">mut</span> head<span class="token punctuation">:</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">ListNode</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">ListNode</span><span class="token operator">&gt;&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> v<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Option</span><span class="token operator">&lt;</span><span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token class-name">ListNode</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">while</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span><span class="token keyword">mut</span> node<span class="token punctuation">)</span> <span class="token operator">=</span> head <span class="token punctuation">{</span>
            head <span class="token operator">=</span> node<span class="token punctuation">.</span>next<span class="token punctuation">.</span><span class="token function">take</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            v<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token class-name">Some</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> res <span class="token operator">=</span> <span class="token class-name">None</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> link<span class="token punctuation">)</span> <span class="token keyword">in</span> v<span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">rev</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">enumerate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">usize</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> <span class="token keyword">mut</span> node <span class="token operator">=</span> link<span class="token punctuation">.</span><span class="token function">unwrap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                node<span class="token punctuation">.</span>next <span class="token operator">=</span> res<span class="token punctuation">;</span>
                res <span class="token operator">=</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        res
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div>`,2),j={setup(c){return(n,e)=>(v(),f(V,null,[I,F(z),O],64))}};var R=b(j,[["__file","p19.html.vue"]]);export{R as default};
