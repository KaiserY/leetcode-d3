import{s as i}from"./index.082e90b7.js";import{d as e,b as o}from"./matrix.a41e1099.js";import{_ as c,e as b,f as d,g as m,o as l,c as u,b as x,F as y,h as r}from"./app.dd4a8a2f.js";const h=b({setup(k){d(()=>{const s=i(t.value).attr("viewBox",[0,0,400,200]);var n={id:"dpMatrix",data:[["","","a","b","*","."],["","","","","",""],["a","","","","",""],["b","","","","",""],["b","","","","",""],["c","","","","",""]],x:48,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},a={id:"dpMatrixPoint",name:"dp",x:1,y:1};e(s,n),o(s,n,a);var p=0;setInterval(()=>{switch(p){case 0:n.data=[["","","a","b","*","."],["","","","","",""],["a","","","","",""],["b","","","","",""],["b","","","","",""],["c","","","","",""]],a.x=1,a.y=1;break;case 1:n.data=[["","","a","b","*","."],["","T","","","",""],["a","F","","","",""],["b","F","","","",""],["b","F","","","",""],["c","F","","","",""]],a.x=1,a.y=1;break;case 2:n.data[1][2]="F",a.x=2,a.y=1;break;case 3:n.data[1][3]="F",a.x=3,a.y=1;break;case 4:n.data[1][4]="F",a.x=4,a.y=1;break;case 5:n.data[1][5]="F",a.x=5,a.y=1;break;case 6:n.data[2][2]="T",a.x=2,a.y=2;break;case 7:n.data[2][3]="F",a.x=3,a.y=2;break;case 8:n.data[2][4]="T",a.x=4,a.y=2;break;case 9:n.data[2][5]="F",a.x=5,a.y=2;break;case 10:n.data[3][2]="F",a.x=2,a.y=3;break;case 11:n.data[3][3]="T",a.x=3,a.y=3;break;case 12:n.data[3][4]="T",a.x=4,a.y=3;break;case 13:n.data[3][5]="T",a.x=5,a.y=3;break;case 14:n.data[4][2]="F",a.x=2,a.y=4;break;case 15:n.data[4][3]="F",a.x=3,a.y=4;break;case 16:n.data[4][4]="T",a.x=4,a.y=4;break;case 17:n.data[4][5]="T",a.x=5,a.y=4;break;case 18:n.data[5][2]="F",a.x=2,a.y=5;break;case 19:n.data[5][3]="F",a.x=3,a.y=5;break;case 20:n.data[5][4]="F",a.x=4,a.y=5;break;case 21:n.data[5][5]="T",a.x=5,a.y=5;break}e(s,n),o(s,n,a),p>21?p=0:p+=1},2e3)});const t=m();return(s,n)=>(l(),u("svg",{ref_key:"d3svg",ref:t},null,512))}});var f=c(h,[["__file","P10.vue"]]);const _=r(`<h1 id="_10-regular-expression-matching" tabindex="-1"><a class="header-anchor" href="#_10-regular-expression-matching" aria-hidden="true">#</a> 10. Regular Expression Matching</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: s = &quot;abbc&quot;, p = &quot;ab*.&quot;
Output: true
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3),g=r(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">is_match</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> p<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">bool</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> p <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">as_bytes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> m <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> n <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> dp<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">bool</span><span class="token operator">&gt;&gt;</span> <span class="token operator">=</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token boolean">false</span><span class="token punctuation">;</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span> m <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..=</span>m <span class="token punctuation">{</span>
            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">..=</span>n <span class="token punctuation">{</span>
                <span class="token keyword">if</span> j <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> p<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">b&#39;*&#39;</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span>
                        <span class="token operator">||</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> p<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">||</span> p<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">b&#39;.&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>
                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span>
                        i <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> p<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">||</span> p<span class="token punctuation">[</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token char">b&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div>`,2),v={setup(k){return(t,s)=>(l(),u(y,null,[_,x(f),g],64))}};var T=c(v,[["__file","p10.html.vue"]]);export{T as default};
