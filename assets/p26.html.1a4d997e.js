import{s as b}from"./index.082e90b7.js";import{d as c,a as x}from"./matrix.a41e1099.js";import{_ as u,e as h,f,g as _,o as i,c as d,b as v,F as y,h as k}from"./app.dd4a8a2f.js";const g=h({setup(m){f(()=>{const n=b(r.value).attr("viewBox",[0,0,400,200]);var p={id:"inputD3Matrix",data:[[0,0,1,1,1,2,2,3,3,4]],x:24,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},s={id:"inputMatrixVLine",name:"i",index:0,upper:!0},e={id:"numsMatrix",data:[],x:24,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},a={id:"outputMatrix",data:[],x:24,y:120,cellHeight:24,cellWidth:24,cellFontSize:"8px"},t=0,o=[{i:0,nums:[],output:0}];l([0,0,1,1,1,2,2,3,3,4],o),setInterval(()=>{s.index=o[t].i,e.data=[o[t].nums],a.data=[[o[t].output]],c(n,p),x(n,p,s),c(n,e),c(n,a),t+=1,t>=o.length&&(t=0)},2e3)});function l(n,p){if(n.length==0)return 0;var s=0,e=[];e.push(n[s]);for(let a=0;a<n.length;a++)n[s]!=n[a]&&(s=s+1,n[s]=n[a],e.push(n[s])),p.push({i:a,nums:JSON.parse(JSON.stringify(e)),output:s+1});return s+1}const r=_();return(n,p)=>(i(),d("svg",{ref_key:"d3svg",ref:r},null,512))}});var w=u(g,[["__file","P26.vue"]]);const M=k(`<h1 id="_26-remove-duplicates-from-sorted-array" tabindex="-1"><a class="header-anchor" href="#_26-remove-duplicates-from-sorted-array" aria-hidden="true">#</a> 26. Remove Duplicates from Sorted Array</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: nums = [0,0,1,1,1,2,2,3,3,4]
Output: 5, nums = [0,1,2,3,4,_,_,_,_,_]
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3),S=k(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">remove_duplicates</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> n <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">!=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">{</span>
                index <span class="token operator">=</span> index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
                nums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        index <span class="token keyword">as</span> <span class="token keyword">i32</span> <span class="token operator">+</span> <span class="token number">1</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div>`,2),D={setup(m){return(l,r)=>(i(),d(y,null,[M,v(w),S],64))}};var z=u(D,[["__file","p26.html.vue"]]);export{z as default};
