import{s as x}from"./index.082e90b7.js";import{d as p,a as u,b as r}from"./matrix.a41e1099.js";import{_ as i,e as h,f as y,g,o as k,c as d,b as _,F as f,h as m}from"./app.dd4a8a2f.js";const P=h({setup(b){y(()=>{const t=x(l.value).attr("viewBox",[0,0,400,200]);var e={id:"inputMatrix",data:[["P","A","Y","P","A","L","I","S","H","I","R","I","N","G"]],x:30,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},s={id:"inputMatrixVLine",name:"i",index:0,upper:!0},o={id:"zigzagMatrix",data:[["P","","A","","H","","N"],["A","P","L","S","I","I","G"],["Y","","I","","R","",""]],x:30,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},n={id:"zigzagMatrixPoint",name:"j",x:0,y:0},a={id:"outputMatrix",data:[["","","","","","","","","","","","","",""]],x:30,y:168,cellHeight:24,cellWidth:24,cellFontSize:"8px"};p(t,e),u(t,e,s),p(t,o),r(t,o,n),p(t,a);var c=0;setInterval(()=>{switch(c){case 0:s.index=0,n.x=0,n.y=0,a.data=[["","","","","","","","","","","","","",""]];break;case 1:s.index=0,n.x=0,n.y=0,a.data=[["P","","","","","","","","","","","","",""]];break;case 2:s.index=4,n.x=2,n.y=0,a.data=[["P","A","","","","","","","","","","","",""]];break;case 3:s.index=8,n.x=4,n.y=0,a.data=[["P","A","H","","","","","","","","","","",""]];break;case 4:s.index=12,n.x=6,n.y=0,a.data=[["P","A","H","N","","","","","","","","","",""]];break;case 5:s.index=1,n.x=0,n.y=1,a.data=[["P","A","H","N","A","","","","","","","","",""]];break;case 6:s.index=3,n.x=1,n.y=1,a.data=[["P","A","H","N","A","P","","","","","","","",""]];break;case 7:s.index=5,n.x=2,n.y=1,a.data=[["P","A","H","N","A","P","L","","","","","","",""]];break;case 8:s.index=7,n.x=3,n.y=1,a.data=[["P","A","H","N","A","P","L","S","","","","","",""]];break;case 9:s.index=9,n.x=4,n.y=1,a.data=[["P","A","H","N","A","P","L","S","I","","","","",""]];break;case 10:s.index=11,n.x=5,n.y=1,a.data=[["P","A","H","N","A","P","L","S","I","I","","","",""]];break;case 11:s.index=13,n.x=6,n.y=1,a.data=[["P","A","H","N","A","P","L","S","I","I","G","","",""]];break;case 12:s.index=2,n.x=0,n.y=2,a.data=[["P","A","H","N","A","P","L","S","I","I","G","Y","",""]];break;case 13:s.index=6,n.x=2,n.y=2,a.data=[["P","A","H","N","A","P","L","S","I","I","G","Y","I",""]];break;case 14:s.index=10,n.x=4,n.y=2,a.data=[["P","A","H","N","A","P","L","S","I","I","G","Y","I","R"]];break}p(t,e),u(t,e,s),p(t,o),r(t,o,n),p(t,a),c>14?c=0:c+=1},2e3)});const l=g();return(t,e)=>(k(),d("svg",{ref_key:"d3svg",ref:l},null,512))}});var w=i(P,[["__file","P6.vue"]]);const A=m(`<h1 id="_6-zigzag-conversion" tabindex="-1"><a class="header-anchor" href="#_6-zigzag-conversion" aria-hidden="true">#</a> 6. Zigzag Conversion</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: s = &quot;PAYPALISHIRING&quot;, numRows = 3
Output: &quot;PAHNAPLSIIGYIR&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>`,3),v=m(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">convert</span><span class="token punctuation">(</span>s<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> num_rows<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">String</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> num_rows <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> s<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">let</span> num_rows <span class="token operator">=</span> num_rows <span class="token keyword">as</span> <span class="token keyword">usize</span><span class="token punctuation">;</span>
        <span class="token comment">// result</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> ret <span class="token operator">=</span> <span class="token class-name">String</span><span class="token punctuation">::</span><span class="token function">with_capacity</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// The length of the input string</span>
        <span class="token keyword">let</span> n <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Length of a loop string</span>
        <span class="token keyword">let</span> cycle_len <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> num_rows <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">;</span>
        <span class="token comment">// Convert string to character Vec</span>
        <span class="token keyword">let</span> s <span class="token operator">=</span> s<span class="token punctuation">.</span><span class="token function">chars</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">into_iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">::</span><span class="token operator">&lt;</span><span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">char</span><span class="token operator">&gt;&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// Note that the length of the string is less than the number of lines</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>num_rows<span class="token punctuation">.</span><span class="token function">min</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">..</span>n <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">step_by</span><span class="token punctuation">(</span>cycle_len<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">for_each</span><span class="token punctuation">(</span><span class="token closure-params"><span class="token closure-punctuation punctuation">|</span>j<span class="token closure-punctuation punctuation">|</span></span> <span class="token punctuation">{</span>
                ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>j <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">if</span> i <span class="token operator">!=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">!=</span> num_rows <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">&amp;&amp;</span> j <span class="token operator">+</span> cycle_len <span class="token operator">-</span> i <span class="token operator">&lt;</span> n <span class="token punctuation">{</span>
                    ret<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>j <span class="token operator">+</span> cycle_len <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        ret
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div>`,2),I={setup(b){return(l,t)=>(k(),d(f,null,[A,_(w),v],64))}};var z=i(I,[["__file","p6.html.vue"]]);export{z as default};
