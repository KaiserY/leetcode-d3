import{s as f}from"./index.082e90b7.js";import{d as u,a as w}from"./matrix.a41e1099.js";import{_ as i,e as v,f as _,g,o as k,c as d,b as y,F as M,h as m}from"./app.dd4a8a2f.js";const S=v({setup(b){_(()=>{const s=f(c.value).attr("viewBox",[0,0,400,200]);var o={id:"inputMatrix",data:[[2,7,11,15]],x:60,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},p={id:"inputMatrixVLine",name:"i",index:0,upper:!0},e={id:"outputMatrix",data:[],x:60,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},n={id:"tMapMatrix",data:[],x:280,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},t=0,a=[{i:0,m:[],output:[]}];r([2,7,11,15],9,a),setInterval(()=>{p.index=a[t].i,n.data=a[t].m,e.data=[a[t].output],u(s,o),w(s,o,p),u(s,e),u(s,n),t+=1,t>=a.length&&(t=0)},2e3)});function r(s,o,p){var e=new Map;for(let n=0;n<s.length;n++){let t=o-s[n],a=e.get(t),l=[];if(e.forEach((h,x)=>{l.push([x,h])}),a!=null)return p.push({i:n,m:l,output:[a,n]}),[a,n];p.push({i:n,m:l,output:[]}),e.set(s[n],n)}return p.push({i:s.length-1,m:[],output:[]}),[]}const c=g();return(s,o)=>(k(),d("svg",{ref_key:"d3svg",ref:c},null,512))}});var V=i(S,[["__file","P1.vue"]]);const F=m(`<h1 id="_1-two-sum" tabindex="-1"><a class="header-anchor" href="#_1-two-sum" aria-hidden="true">#</a> 1. Two Sum</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,3),B=m(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">two_sum</span><span class="token punctuation">(</span>nums<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> l <span class="token operator">=</span> nums<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> m <span class="token operator">=</span> <span class="token namespace">std<span class="token punctuation">::</span>collections<span class="token punctuation">::</span></span><span class="token class-name">HashMap</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span>l <span class="token punctuation">{</span>
            <span class="token keyword">let</span> t <span class="token operator">=</span> target <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token keyword">let</span> <span class="token class-name">Some</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">=</span> m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>t<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token operator">*</span>x<span class="token punctuation">,</span> i <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                m<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i <span class="token keyword">as</span> <span class="token keyword">i32</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token macro property">vec!</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>`,2),E={setup(b){return(r,c)=>(k(),d(M,null,[F,y(V),B],64))}};var L=i(E,[["__file","p1.html.vue"]]);export{L as default};
