import{s as q}from"./index.082e90b7.js";import{d as r,a as m}from"./matrix.a41e1099.js";import{_ as b,e as g,f as _,g as w,o as h,c as v,b as y,F as M,h as x}from"./app.dd4a8a2f.js";const S=g({setup(f){_(()=>{const t=q(d.value).attr("viewBox",[0,0,400,200]);var o={id:"inputMatrix",data:[["a","e","i","o","u"]],x:60,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},u={id:"inputMatrixVLine",name:"i",index:-1,upper:!0},a={id:"countMatrix",data:[[1,1,1,1,1]],x:60,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},e={id:"countMatrixVLine",name:"i",index:-1,upper:!0},c={id:"vowelsMatrix",data:[],x:24*10,y:24,cellHeight:24,cellWidth:24,cellFontSize:"8px"},i={id:"outputMatrix",data:[],x:24*10,y:72,cellHeight:24,cellWidth:24,cellFontSize:"8px"},p=0,s=[{dp:[1,1,1,1,1],vowels:"",i:-1,sum:0}];k(2,s),setInterval(()=>{var n=s[p];a.data=[n.dp],u.index=n.i,e.index=n.i,c.data=[[n.vowels]],i.data=[[n.sum]],r(t,o),m(t,o,u),r(t,a),m(t,a,e),r(t,c),r(t,i),p+=1,p>=s.length&&(p=0)},2e3)});function k(t,o){var u=["a","e","i","o","u"],a=[1,1,1,1,1],e=0,c="";for(let s=1;s<t;s++)for(let n=0;n<5;n++){var i=0;for(let l=n;l<a.length;l++){c=u[n]+u[l],i+=a[l];var p=JSON.parse(JSON.stringify(a));p[n]=i,o.push({dp:p,i:n,sum:e,vowels:c})}a[n]=i}for(let s=0;s<a.length;s++)e+=a[s],o.push({dp:JSON.parse(JSON.stringify(a)),i:s,sum:e,vowels:t==1?u[s]:""});return e}const d=w();return(t,o)=>(h(),v("svg",{ref_key:"d3svg",ref:d},null,512))}});var V=b(S,[["__file","P1641.vue"]]);const N=x(`<h1 id="_1641-count-sorted-vowel-strings" tabindex="-1"><a class="header-anchor" href="#_1641-count-sorted-vowel-strings" aria-hidden="true">#</a> 1641. Count Sorted Vowel Strings</h1><h2 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Input: n = 2
Output: 15
Explanation: The 15 sorted strings that consist of vowels only are
[&quot;aa&quot;,&quot;ae&quot;,&quot;ai&quot;,&quot;ao&quot;,&quot;au&quot;,&quot;ee&quot;,&quot;ei&quot;,&quot;eo&quot;,&quot;eu&quot;,&quot;ii&quot;,&quot;io&quot;,&quot;iu&quot;,&quot;oo&quot;,&quot;ou&quot;,&quot;uu&quot;].
Note that &quot;ea&quot; is not a valid string since &#39;e&#39; comes after &#39;a&#39; in the alphabet.
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>`,3),F=x(`<h2 id="rust-solution" tabindex="-1"><a class="header-anchor" href="#rust-solution" aria-hidden="true">#</a> Rust Solution</h2><div class="language-rust ext-rs line-numbers-mode"><pre class="language-rust"><code><span class="token keyword">impl</span> <span class="token class-name">Solution</span> <span class="token punctuation">{</span>
    <span class="token keyword">pub</span> <span class="token keyword">fn</span> <span class="token function-definition function">count_vowel_strings</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token keyword">i32</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">i32</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> <span class="token keyword">mut</span> dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token number">1</span><span class="token punctuation">..</span>n <span class="token punctuation">{</span>
            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token number">0</span><span class="token punctuation">..</span><span class="token number">4</span> <span class="token punctuation">{</span>
                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">..</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        dp<span class="token punctuation">.</span><span class="token function">iter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>`,2),L={setup(f){return(k,d)=>(h(),v(M,null,[N,y(V),F],64))}};var J=b(L,[["__file","p1641.html.vue"]]);export{J as default};
